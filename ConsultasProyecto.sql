USE IntentoBaseDatosCinemark
GO
--1. La capacidad total de cada cine, así como el número de salas que tienen cada tipo de soporte.
SELECT *
INTO #TEMP_REGISTRO1
FROM 
(
	SELECT SALA.CODIGO_CINE,SUM(SALA.CAPACIDAD) AS 'CAPACIDAD' 
	FROM SALA
	GROUP BY SALA.CODIGO_CINE
)AS X

SELECT A.CODIGO_CINE,#TEMP_REGISTRO1.CAPACIDAD,A.TIPO_SOPORTE_DISPONIBLE,A.[CANTIDAD SALAS],A.[CAPACIDAD SALA]
FROM 
(
	SELECT SALA.TIPO_SOPORTE_DISPONIBLE,COUNT(1) AS 'CANTIDAD SALAS',CODIGO_CINE,SUM(SALA.CAPACIDAD) AS 'CAPACIDAD SALA'
	FROM SALA
	GROUP BY SALA.TIPO_SOPORTE_DISPONIBLE,SALA.CODIGO_CINE
)A
INNER JOIN #TEMP_REGISTRO1
	ON #TEMP_REGISTRO1.CODIGO_CINE=A.CODIGO_CINE
	
DROP TABLE #TEMP_REGISTRO1
GO
--2. El mes que hubo más bajas de personal, por cine.
SELECT TOP 1 A.MES,COUNT(1) AS 'CANTIDAD BAJAS', ACTIVO.CODIGO_CINE,CINE.NOMBRE,CINE.TELEFONO,CINE.DIRECCION
FROM 
(
	SELECT DATENAME(MONTH,INACTIVO.FECHA) AS 'MES',INACTIVO.ID_CODIGO_EMPLEADO
	FROM INACTIVO
)A
INNER JOIN ACTIVO
	ON A.ID_CODIGO_EMPLEADO=ACTIVO.ID_CODIGO_EMPLEADO
INNER JOIN CINE
	ON CINE.CODIGO_CINE=ACTIVO.CODIGO_CINE
GROUP BY A.MES,ACTIVO.CODIGO_CINE,CINE.NOMBRE,CINE.DIRECCION,CINE.TELEFONO
ORDER BY [CANTIDAD BAJAS] DESC
GO

--3. El detalle del actor que ha aparecido en más peliculas regulares.
SELECT TOP 1 REPARTO.NOMBRE_ARTISTICO,COUNT(1) AS 'CANTIDAD DE APARICIONES' FROM REPARTO
GROUP BY REPARTO.NOMBRE_ARTISTICO
ORDER BY [CANTIDAD DE APARICIONES] DESC

--4. El número de películas calificadas por los asistentes por calificación general (Obra Maestra, Muy Buena, Buena, Regular, Mala)

SELECT OPINIONES.CALIFICACION,COUNT(1) AS 'CANTIDAD CALIFICACIONES',OPINIONES.CODIGO_PELICULA,PELICULA.TITULO
FROM OPINIONES
	INNER JOIN PELICULA
		ON PELICULA.CODIGO_PELICULA=OPINIONES.CODIGO_PELICULA
GROUP BY OPINIONES.CALIFICACION,OPINIONES.CODIGO_PELICULA,PELICULA.TITULO
ORDER BY OPINIONES.CALIFICACION DESC

--5. Los detalles del cine con más bajas de personal.
SELECT A.CODIGO_CINE,CINE.NOMBRE,CINE.DIRECCION,CINE.TELEFONO
FROM 
(
	SELECT ACTIVO.CODIGO_CINE, COUNT(1) AS 'CANTIDAD BAJAS'
	FROM INACTIVO
		INNER JOIN ACTIVO
			ON INACTIVO.ID_CODIGO_EMPLEADO=ACTIVO.ID_CODIGO_EMPLEADO
	GROUP BY ACTIVO.CODIGO_CINE
)A
	INNER JOIN CINE
		ON A.CODIGO_CINE=CINE.CODIGO_CINE
ORDER BY A.[CANTIDAD BAJAS] DESC
GO
--6. La cartelera de la semana corriente de cada cine
SELECT EVENTO.CODIGO_CINE,
CINE.NOMBRE, 
CARTELERA.CODIGO_PELICULA, 
PELICULA.TITULO, 
DATENAME(MONTH,EVENTO.FECHA) AS 'Mes',
DATENAME (YEAR, EVENTO.FECHA) as 'Año'
FROM CARTELERA
	INNER JOIN EVENTO
		ON CARTELERA.CODIGO_PELICULA=EVENTO.CODIGO_PELICULA
	INNER JOIN PELICULA
		ON CARTELERA.CODIGO_PELICULA=PELICULA.CODIGO_PELICULA
	INNER JOIN CINE
		ON CINE.CODIGO_CINE=EVENTO.CODIGO_CINE
ORDER BY EVENTO.FECHA DESC

--7. El detalle de las películas regulares que se han exhibido en la sala más pequeña de cada cine.
SELECT EVENTO.CODIGO_PELICULA,SALA.NUMERO_SALA,SALA.CODIGO_CINE,SALA.CAPACIDAD
FROM(
	SELECT SALA.CODIGO_CINE, MIN(CAPACIDAD) AS 'CAPACIDAD' FROM SALA
	GROUP BY SALA.CODIGO_CINE
)A
	INNER JOIN SALA
		ON SALA.CAPACIDAD=A.CAPACIDAD AND SALA.CODIGO_CINE=A.CODIGO_CINE
	INNER JOIN EVENTO
		ON EVENTO.CODIGO_CINE=A.CODIGO_CINE AND EVENTO.NUMERO_SALA=SALA.NUMERO_SALA
	INNER JOIN PELICULA
		ON EVENTO.CODIGO_PELICULA=PELICULA.CODIGO_PELICULA
	INNER JOIN REGULARE
		ON EVENTO.CODIGO_PELICULA=REGULARE.CODIGO_PELICULA
GO 

--8. El detalle del cine con mayores ventas en dulcería que en boletos.

SELECT *
INTO #VENTA_DULCES1
FROM
(
	SELECT VENTADULCES.CODIGO_CINE,SUM(VENTADULCES.[CANTIDAD VENDIDA]) 'CANTIDAD VENDIDA'
	FROM 
	(
		SELECT DETALLE.CODIGO_PRODUCTO, SUM(CANTIDAD) AS 'CANTIDAD VENDIDA',FACTURA.CODIGO_CINE
		FROM DETALLE
			INNER JOIN FACTURA
				ON FACTURA.NUMERO_FACTURA=DETALLE.NUMERO_FACTURA
		GROUP BY DETALLE.CODIGO_PRODUCTO,FACTURA.CODIGO_CINE
	)VENTADULCES
		INNER JOIN DULCES
			ON VENTADULCES.CODIGO_PRODUCTO=DULCES.CODIGO_PRODUCTO
	GROUP BY VENTADULCES.CODIGO_CINE
)AS X

SELECT *
INTO #VENTA_BOLETOS
FROM
(
	SELECT VENTABOLETOS.CODIGO_CINE,SUM(VENTABOLETOS.[CANTIDAD VENDIDA]) AS 'CANTIDAD VENDIDA'
		FROM 
		(
			SELECT DETALLE.CODIGO_PRODUCTO, SUM(DETALLE.CANTIDAD) AS 'CANTIDAD VENDIDA',FACTURA.CODIGO_CINE
			FROM DETALLE
				INNER JOIN FACTURA
					ON FACTURA.NUMERO_FACTURA=DETALLE.NUMERO_FACTURA
			GROUP BY DETALLE.CODIGO_PRODUCTO,FACTURA.CODIGO_CINE
		)VENTABOLETOS
			INNER JOIN BOLETO
				ON VENTABOLETOS.CODIGO_PRODUCTO=BOLETO.CODIGO_PRODUCTO
		GROUP BY VENTABOLETOS.CODIGO_CINE
)AS Y

SELECT 
#VENTA_DULCES1.CODIGO_CINE,#VENTA_DULCES1.[CANTIDAD VENDIDA] AS 'CANTIDAD VENDIDA DULCES',#VENTA_BOLETOS.[CANTIDAD VENDIDA] AS 'CANTIDAD VENDIDA BOLETOS'
FROM #VENTA_DULCES1
	INNER JOIN #VENTA_BOLETOS
		ON #VENTA_DULCES1.CODIGO_CINE=#VENTA_BOLETOS.CODIGO_CINE
WHERE #VENTA_DULCES1.[CANTIDAD VENDIDA]>#VENTA_BOLETOS.[CANTIDAD VENDIDA]

DROP TABLE #VENTA_BOLETOS
DROP TABLE #VENTA_DULCES1
--9. El listado de actores que aparecen en la película mejor evaluada.
CREATE VIEW PELICULA_CON_CALIFICACION
	([CODIGO_PELICULA],[NOTA PROMEDIO PONDERADA])
	AS
	SELECT
		A.CODIGO_PELICULA,
		(SUM(A.[Nota por calificacion]*A.[CANTIDAD OPINIONES]))/(SUM(A.[CANTIDAD OPINIONES])) AS 'NOTA PROMEDIO PONDERADA'
		FROM 
		(
			SELECT OPINIONES.CODIGO_PELICULA, COUNT(1) AS 'CANTIDAD OPINIONES',OPINIONES.CALIFICACION ,
			case
				when OPINIONES.CALIFICACION='Obra Maestra' then 5.0
				when OPINIONES.CALIFICACION='Muy Buena' then 4.0
				when OPINIONES.CALIFICACION='Buena' then 3.0
				when OPINIONES.CALIFICACION='Regular' then 2.0
				when OPINIONES.CALIFICACION='Mala' then 1.0
				else 0
	 		end as 'Nota por calificacion'
			FROM OPINIONES 
			INNER JOIN REGULARE
				ON OPINIONES.CODIGO_PELICULA=REGULARE.CODIGO_PELICULA
			GROUP BY OPINIONES.CALIFICACION,OPINIONES.CODIGO_PELICULA
		)A
			INNER JOIN PELICULA
				ON A.CODIGO_PELICULA=PELICULA.CODIGO_PELICULA
		GROUP BY A.CODIGO_PELICULA
GO
SELECT *
INTO #PELICULAMEJORCALIFICADA
FROM 
(
	SELECT TOP 1 * FROM PELICULA_CON_CALIFICACION
	ORDER BY [NOTA PROMEDIO PONDERADA] DESC
)AS X

SELECT * FROM #PELICULAMEJORCALIFICADA
INNER JOIN REPARTO
	ON #PELICULAMEJORCALIFICADA.CODIGO_PELICULA=REPARTO.CODIGO_PELICULA

DROP TABLE #PELICULAMEJORCALIFICADA
------------------------------------NO TOCAR-----------------------------------------------
--10. El detalle de los cines donde se exhibieron las 3 películas peor evaluadas.
SElECT TOP 3 EVENTO.CODIGO_CINE,CINE.NOMBRE,CINE.DIRECCION,CINE.TELEFONO
FROM PELICULA_CON_CALIFICACION
	INNER JOIN EVENTO
		ON PELICULA_CON_CALIFICACION.CODIGO_PELICULA=EVENTO.CODIGO_PELICULA
	INNER JOIN CINE	
		ON EVENTO.CODIGO_CINE=CINE.CODIGO_CINE
ORDER BY PELICULA_CON_CALIFICACION.[NOTA PROMEDIO PONDERADA] ASC

--11. Los datos de las 10 películas de las que más boletos se han emitido.
SELECT *
INTO #VENTA_BOLETOS
FROM
(
	SELECT VENTABOLETOS.CODIGO_CINE,COUNT(1) AS 'CANTIDAD VENDIDA',BOLETO.CODIGO_PELICULA
		FROM 
		(
			SELECT DETALLE.CODIGO_PRODUCTO, COUNT(1) AS 'CANTIDAD VENDIDA',FACTURA.CODIGO_CINE
			FROM DETALLE
				INNER JOIN FACTURA
					ON FACTURA.NUMERO_FACTURA=DETALLE.NUMERO_FACTURA
			GROUP BY DETALLE.CODIGO_PRODUCTO,FACTURA.CODIGO_CINE
		)VENTABOLETOS
			INNER JOIN BOLETO
				ON VENTABOLETOS.CODIGO_PRODUCTO=BOLETO.CODIGO_PRODUCTO
		GROUP BY VENTABOLETOS.CODIGO_CINE,BOLETO.CODIGO_PELICULA
)AS X

SELECT TOP 10 
#VENTA_BOLETOS.CODIGO_PELICULA,
PELICULA.TITULO,
PELICULA.AÑO,
PELICULA.DESCRIPCION,
PELICULA.DIRECTOR,
PELICULA.DISTRIBUIDOR,
PELICULA.DURACION,
PELICULA.PAIS_PRODUCCION,
PELICULA.TIPO_EMISION
FROM #VENTA_BOLETOS
	INNER JOIN PELICULA
		ON #VENTA_BOLETOS.CODIGO_PELICULA=PELICULA.CODIGO_PELICULA
ORDER BY #VENTA_BOLETOS.[CANTIDAD VENDIDA] DESC

DROP TABLE #VENTA_BOLETOS
----------------------------------------NO TOCAR---------------------------------
--12. La duración promedio de los contenidos exhibidos por cine.
SELECT EVENTO.CODIGO_CINE, AVG(PELICULA.DURACION) AS 'DURACION PROMEDIO'
FROM PELICULA
	INNER JOIN EVENTO
		ON PELICULA.CODIGO_PELICULA=EVENTO.CODIGO_PELICULA
GROUP BY EVENTO.CODIGO_CINE
-----------------------------------------NO TOCAR-----------------------------------
--13. El detalle del cliente que más visitas a Cinemark ha realizado, indicando el número de veces que ha visitado cada sede.
SELECT FACTURA.NIT,FACTURA.NOMBRE ,COUNT(1) AS 'CANTIDAD VISITAS'
FROM FACTURA
GROUP BY FACTURA.NIT,FACTURA.NOMBRE
--------------------------------NO TOCAR---------------------------------------------
--14. Los dos productos más populares en dulcería por cine.
SELECT 
	   PELICULA.TITULO, 
	   PELICULA.CODIGO_PELICULA, 
	   PELICULA.AÑO,
	   PELICULA.DESCRIPCION,
	   PELICULA.DIRECTOR,
	   PELICULA.PAIS_PRODUCCION,
	   PELICULA.TIPO_EMISION,
	   PELICULA.DURACION
FROM
(
	SELECT TOP 3 * FROM PELICULA_CON_CALIFICACION
	ORDER BY [NOTA PROMEDIO PONDERADA] ASC
)BAJACALIFICACION
INNER JOIN PELICULA
ON BAJACALIFICACION.CODIGO_PELICULA = PELICULA.CODIGO_PELICULA

	SELECT A.NUMERO_FACTURA, A.TOTAL_COMPRADOS  
	INTO #TEMP
	FROM(
		SELECT TOP 2  NUMERO_FACTURA,SUM(CANTIDAD) AS [TOTAL_COMPRADOS]
		FROM DETALLE
		WHERE CODIGO_PRODUCTO LIKE 'DULC%'
		GROUP BY NUMERO_FACTURA
		ORDER BY [TOTAL_COMPRADOS] DESC
	) A

	SELECT #TEMP.NUMERO_FACTURA, FACTURA.CODIGO_CINE
	INTO #TEMP1
	FROM #TEMP
	LEFT JOIN FACTURA
	ON #TEMP.NUMERO_FACTURA = FACTURA.NUMERO_FACTURA

	SELECT * FROM #TEMP1
	LEFT JOIN CINE
	ON #TEMP1.CODIGO_CINE = CINE.CODIGO_CINE

DROP TABLE #TEMP
DROP TABLE #TEMP1
GO
--15. El promedio de ventas totales por cine
SELECT *
INTO #PRODUCTOS_CON_PRECIO
FROM (
	SELECT DULCES.CODIGO_PRODUCTO,PEQUEÑO.PRECIO FROM DULCES INNER JOIN PEQUEÑO ON DULCES.CODIGO_PRODUCTO=PEQUEÑO.CODIGO_PRODUCTO
	UNION
	SELECT DULCES.CODIGO_PRODUCTO,MEDIANO.PRECIO FROM DULCES INNER JOIN MEDIANO ON DULCES.CODIGO_PRODUCTO=MEDIANO.CODIGO_PRODUCTO
	UNION
	SELECT DULCES.CODIGO_PRODUCTO,GRANDE.PRECIO FROM DULCES INNER JOIN GRANDE ON DULCES.CODIGO_PRODUCTO=GRANDE.CODIGO_PRODUCTO
	UNION
	SELECT DULCES.CODIGO_PRODUCTO,UNICO.PRECIO FROM DULCES INNER JOIN UNICO ON DULCES.CODIGO_PRODUCTO=UNICO.CODIGO_PRODUCTO
	UNION
	SELECT BOLETO.CODIGO_PRODUCTO,BOLETO.PRECIO FROM BOLETO
)AS X
SELECT FACTURA.CODIGO_CINE, SUM((#PRODUCTOS_CON_PRECIO.PRECIO*CANTIDAD)) AS 'TOTAL VENDIDO'
FROM FACTURA
	INNER JOIN DETALLE
		ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA
	INNER JOIN #PRODUCTOS_CON_PRECIO
		ON DETALLE.CODIGO_PRODUCTO=#PRODUCTOS_CON_PRECIO.CODIGO_PRODUCTO
GROUP BY FACTURA.CODIGO_CINE
DROP TABLE #PRODUCTOS_CON_PRECIO
GO
--------------TABLA CON TODOS LOS PRODUCTOS Y PRECIOS------------------------------------------
--16. El listado contenidos que se han dejado de exhibir desde el primero de marzo en todos los cines.
SELECT * FROM REGISTRO_HISTORICO
WHERE FECHA_DEJA_CARTELERA >='01-03-2019'
--17. El nombre de los empleados que han laborado en el cine con mayores ventas.
SELECT ACTIVO.ID_CODIGO_EMPLEADO,EMPLEADO.NOMBRE+' '+EMPLEADO.APELLIDO AS 'NOMBRE COMPLETO',EMPLEADO.FECHA_NACIMIENTO,EMPLEADO.SALARIO,A.CODIGO_CINE
FROM
(
	SELECT TOP 1 FACTURA.CODIGO_CINE,SUM(DETALLE.CANTIDAD) AS 'CANTIDAD VENDIDA'
	FROM FACTURA
		INNER JOIN DETALLE
			ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA
	GROUP BY FACTURA.CODIGO_CINE
)A
INNER JOIN ACTIVO
	ON ACTIVO.CODIGO_CINE=A.CODIGO_CINE
INNER JOIN EMPLEADO
	ON EMPLEADO.ID_EMPLEADO=ACTIVO.ID_CODIGO_EMPLEADO
GO
--18. El número de exhibiciones culturales y deportivas que se han proyectado por cine.
SELECT A.CODIGO_CINE,CINE.NOMBRE,CINE.DIRECCION,CINE.TELEFONO
FROM 
(
	SELECT EVENTO.CODIGO_CINE,COUNT(1) AS 'CANTIDAD PROYECCIONES'
	FROM EVENTO
		INNER JOIN ESPECIALES
			ON EVENTO.CODIGO_PELICULA=ESPECIALES.CODIGO_PELICULA
	GROUP BY EVENTO.CODIGO_CINE
)A
	INNER JOIN CINE
		ON CINE.CODIGO_CINE=A.CODIGO_CINE
GO

--19. El mes que menos boletos se vendieron, pero más productos de dulcería se vendieron.

SELECT *
INTO #VENTA_DULCES_POR_MES
FROM
(
	SELECT A.CODIGO_PRODUCTO,A.[CANTIDAD VENDIDA],A.FECHA
	FROM
	(
		SELECT DETALLE.CODIGO_PRODUCTO,SUM(DETALLE.CANTIDAD) AS 'CANTIDAD VENDIDA',FACTURA.FECHA
		FROM DETALLE
			INNER JOIN FACTURA
				ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA
			GROUP BY DETALLE.CODIGO_PRODUCTO,FACTURA.FECHA
	)A
	INNER JOIN DULCES
		ON A.CODIGO_PRODUCTO=DULCES.CODIGO_PRODUCTO
)AS X

SELECT *
INTO #VENTA_BOLETOS_POR_MES
FROM(
	SELECT A.CODIGO_PRODUCTO,A.[CANTIDAD VENDIDA],A.FECHA
	FROM
	(
		SELECT DETALLE.CODIGO_PRODUCTO,SUM(DETALLE.CANTIDAD) AS 'CANTIDAD VENDIDA',FACTURA.FECHA
		FROM DETALLE
			INNER JOIN FACTURA
				ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA
			GROUP BY DETALLE.CODIGO_PRODUCTO,FACTURA.FECHA
	)A
	INNER JOIN BOLETO
		ON A.CODIGO_PRODUCTO=BOLETO.CODIGO_PRODUCTO
)AS Y

SELECT *
INTO #TEMP_BOLETO_MES
FROM
(
	SELECT A.MES,SUM(A.[CANTIDAD VENDIDA]) AS 'CANTIDAD VENDIDA MES'
	FROM 
	(
		SELECT DATENAME(MONTH,FECHA) AS 'MES', [CANTIDAD VENDIDA] FROM #VENTA_BOLETOS_POR_MES
	)A
	GROUP BY A.MES
)AS T

SELECT *
INTO #TEMP_DULCES_MES
FROM
(
	SELECT A.MES,SUM(A.[CANTIDAD VENDIDA]) AS 'CANTIDAD VENDIDA MES'
	FROM 
	(
		SELECT DATENAME(MONTH,FECHA) AS 'MES', [CANTIDAD VENDIDA] FROM #VENTA_DULCES_POR_MES
	)A
	GROUP BY A.MES
)AS W
SELECT * FROM #TEMP_DULCES_MES
SELECT * FROM #TEMP_BOLETO_MES
SELECT #TEMP_DULCES_MES.MES,#TEMP_DULCES_MES.[CANTIDAD VENDIDA MES]
FROM #TEMP_BOLETO_MES
	JOIN #TEMP_DULCES_MES
		ON #TEMP_BOLETO_MES.MES=#TEMP_DULCES_MES.MES
WHERE #TEMP_DULCES_MES.[CANTIDAD VENDIDA MES]>#TEMP_BOLETO_MES.[CANTIDAD VENDIDA MES]

DROP TABLE #VENTA_DULCES_POR_MES
DROP TABLE #VENTA_BOLETOS_POR_MES
DROP TABLE #TEMP_BOLETO_MES
DROP TABLE #TEMP_DULCES_MES
--20. El detalle de los clientes que nunca han consumido algo de las dulcerías en alguna de sus visitas.
SELECT *
INTO #TABLAVENTAS
FROM (
SELECT FACTURA.NIT,FACTURA.NOMBRE,FACTURA.DIRECCION FROM FACTURA INNER JOIN DETALLE ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA
)AS X
SELECT *
INTO #TABLAVENTASDULCES
FROM (
SELECT FACTURA.NIT,FACTURA.NOMBRE,FACTURA.DIRECCION
FROM FACTURA INNER JOIN DETALLE ON DETALLE.NUMERO_FACTURA=FACTURA.NUMERO_FACTURA INNER JOIN DULCES ON DETALLE.CODIGO_PRODUCTO=DULCES.CODIGO_PRODUCTO
)AS Y
SELECT #TABLAVENTAS.NIT,#TABLAVENTAS.NOMBRE,#TABLAVENTAS.DIRECCION
FROM #TABLAVENTAS
	LEFT JOIN #TABLAVENTASDULCES
		ON #TABLAVENTAS.NIT=#TABLAVENTASDULCES.NIT
WHERE #TABLAVENTASDULCES.NIT IS NULL

DROP TABLE #TABLAVENTAS
DROP TABLE #TABLAVENTASDULCES
GO